{"version":3,"sources":["img/blue-candy.png","img/red-candy.png","img/orange-candy.png","img/green-candy.png","img/purple-candy.png","img/yellow-candy.png","img/blank.png","components/ScoreBoard.js","App.js","reportWebVitals.js","index.js"],"names":["ScoreBoard","score","className","App","colors","blue","red","green","orange","purple","yellow","useState","allColors","setAllColors","start","setStart","end","setEnd","setScore","useEffect","selected64colors","i","width","randomColor","Math","floor","random","length","push","fillWithRandomColors","checkFor4Columns","fourCols","fitstNumber","isBlank","blank","every","el","scor","forEach","checkFor4Rows","fourRows","includes","checkFor3Columns","threeCols","checkFor3Rows","threeRows","console","log","moveBlackUp","firstRow","j","randomNumber","dragStart","e","target","dragDrop","dragEnd","startId","parseInt","getAttribute","endId","isValid","isValidTrue","is4Column","is4Rows","is3Column","is3Rows","Timer","setInterval","clearInterval","map","color","index","alt","src","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae619e40.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blue-candy.73120c15.png\";","export default __webpack_public_path__ + \"static/media/red-candy.3658b37c.png\";","export default __webpack_public_path__ + \"static/media/orange-candy.f106b2cd.png\";","export default __webpack_public_path__ + \"static/media/green-candy.599f7016.png\";","export default __webpack_public_path__ + \"static/media/purple-candy.ae25b8a5.png\";","export default __webpack_public_path__ + \"static/media/yellow-candy.a3d87a9b.png\";","export default __webpack_public_path__ + \"static/media/blank.fbcb9179.png\";","import React from 'react'\r\n\r\nconst ScoreBoard = ({score}) => {\r\n    return (\r\n        <div className=\"scoreCard\">\r\n            \r\n            <h1>scorecard</h1>\r\n            <h3>{score}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard\r\n","import './App.css';\nimport { useEffect,useState } from 'react';\nimport blue from \"./img/blue-candy.png\"\nimport red from \"./img/red-candy.png\"\nimport orange from \"./img/orange-candy.png\"\nimport green from \"./img/green-candy.png\"\nimport purple from \"./img/purple-candy.png\"\nimport yellow from \"./img/yellow-candy.png\"\nimport blank from \"./img/blank.png\"\nimport ScoreBoard from './components/ScoreBoard';\nfunction App() {\n  const colors=[blue,red,green,orange,purple,yellow]\n  const width=8\nconst [allColors,setAllColors]=useState([])\nconst [start,setStart]=useState(null)\nconst [end,setEnd]=useState(null)\nconst [isFirstReder,setIsFirstReder]=useState(false)\nconst [score,setScore]=useState(0)\nconst fillWithRandomColors=()=>{\n  const selected64colors=[]\n  for(let i=0;i<width*width;i++){\n    const randomColor=colors[Math.floor(Math.random()*colors.length)]\n    selected64colors.push(randomColor)\n  }\n \n  setAllColors(selected64colors)\n \n}\n\nuseEffect(() => {\n\n  \n  fillWithRandomColors()\n\n}, [])\n\n\nconst checkFor4Columns=()=>{\n  for(let i=0;i<=39;i++){\n    const fourCols=[i,i+width,i+2*width,i+3*width]\n const fitstNumber=allColors[i]\n const isBlank = allColors[i] === blank\n\n if(fourCols.every(el=>allColors[el]===fitstNumber && !isBlank)){\n  setScore((scor)=>scor+4)\n\n  fourCols.forEach(el=>allColors[el]=blank)\n  return true\n }\n\n// for(let j=0;j<64;j++){\n//   if(allColors[j]===\"\"){\n  \n//     allColors[j]=allColors[j-width]\n//     allColors[j-width]=\"\"\n//   }\n// }\n\n  }\n}\nconst checkFor4Rows=()=>{\n  for(let i=0;i<=64;i++){\n    const fourRows=[i,i+1,i+2]\n    const notValid=[5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55,62,63,64]\n const fitstNumber=allColors[i]\n const isBlank = allColors[i] === blank\nif(notValid.includes(i))continue\n\n if(fourRows.every(el=>allColors[el]===fitstNumber && !isBlank)){\n  setScore((scor)=>scor+4)\n  fourRows.forEach(el=>allColors[el]=blank)\n  return true\n }\n\n\n\n  }\n}\n\n\nconst checkFor3Columns=()=>{\n  for(let i=0;i<=47;i++){\n    const threeCols=[i,i+width,i+2*width]\n const fitstNumber=allColors[i]\n const isBlank = allColors[i] === blank\n if(threeCols.every(el=>allColors[el]===fitstNumber && !isBlank)){\n  setScore((scor)=>scor+3)\n  threeCols.forEach(el=>allColors[el]=blank)\n  return true\n }\n\n// for(let j=0;j<64;j++){\n//   if(allColors[j]===\"\"){\n  \n//     allColors[j]=allColors[j-width]\n//     allColors[j-width]=\"\"\n//   }\n// }\n\n  }\n}\n\n\nconst checkFor3Rows=()=>{\n  for(let i=0;i<=64;i++){\n    const threeRows=[i,i+1,i+2]\n    const notValid=[6,7,14,15,22,23,30,31,38,39,46,47,54,55,63,64]\n const fitstNumber=allColors[i]\n const isBlank = allColors[i] === blank\n\nif(notValid.includes(i))continue\n\n if(threeRows.every(el=>allColors[el]===fitstNumber && !isBlank)){\n  setScore((scor)=>scor+3)\n  threeRows.forEach(el=>allColors[el]=blank)\n  return true\n }\n\n//  for(let j=0;j<64;j++){\n//   if(allColors[j]===\"\"){\n  \n//     allColors[j]=allColors[j-width]\n//     allColors[j-width]=\"\"\n//   }\n// }\n  }\n}\n\n\nconsole.log(score);\n\n\nconst moveBlackUp=()=>{\n  let firstRow=[0,1,2,3,4,5,6,7]\n   for(let j=0;j<64;j++){\n      if(firstRow.includes(j)){\n        if((firstRow&&allColors[j])===blank){\n           const randomNumber=Math.floor(Math.random()*colors.length)\n           allColors[j]=colors[randomNumber]\n          \n        }\n      }\n\n\n  if(allColors[j]===blank){\n  \n    allColors[j]=allColors[j-width]\n    allColors[j-width]=blank\n  }\n}\n\n}\n\n\n// const validMoves=[start.dataid+1,start.dataid-1,start.dataid+width,start.dataid+1]\n\n\n \n \n//   const validMove=[getDataIdOfStart+1,getDataIdOfStart-1,getDataIdOfStart+width,getDataIdOfStart-width]\n//  const getDataIdOfEnd=parseInt(end.getAttribute(\"data-id\"))\n \n//  if(validMove.includes(getDataIdOfEnd)){\n//   let temp=allColors[getDataIdOfStart]\n//   allColors[getDataIdOfStart]=allColors[getDataIdOfEnd]\n//   allColors[getDataIdOfEnd]=temp\n  \n//  }\n\n\n\n\nconst dragStart=(e)=>{\n  \nsetStart(e.target)\n// if(isFirstReder){\n\n//   const getDataIdOfStart=parseInt(start.getAttribute(\"data-id\"))\n//   console.log(getDataIdOfStart);\n// }\n}\n\nconst dragDrop=(e)=>{\n setEnd(e.target)\n\n}\n\nconst dragEnd=()=>{\n \nconst startId=parseInt(start.getAttribute('data-id'))\nconst endId=parseInt(end.getAttribute('data-id'))\nif(startId===endId){\n  return\n}\n\nconst isValid=[startId+1,startId-1,startId+width,startId-width]\n\nallColors[endId]=start.getAttribute(\"src\")\nallColors[startId]=end.getAttribute(\"src\")\n// console.log(allColors[endId],allColors[startId]);\nconst isValidTrue=isValid.includes(endId)\n// console.log(isValidTrue);\nlet is4Column=checkFor4Columns()\nlet is4Rows=checkFor4Rows()\nlet is3Column=checkFor3Columns()\nlet is3Rows=checkFor3Rows()\nif(endId && isValidTrue && (is4Column || is4Rows || is3Column || is3Rows)){\n \n  setStart(null)\n  setEnd(null)\n}else{\n  allColors[endId]=end.getAttribute(\"src\")\n  allColors[startId]=start.getAttribute(\"src\")\n}\n\n\n}\n\nuseEffect(() => {\n  const Timer=setInterval(()=>{\n    checkFor4Columns()\n    checkFor4Rows()\n    checkFor3Columns()\n    checkFor3Rows()\n    moveBlackUp()\n    \n    setAllColors([...allColors])\n  \n  },100)\n   return()=>clearInterval(Timer)\n}, [checkFor4Columns,checkFor4Rows,checkFor3Columns,checkFor3Rows,moveBlackUp])\n  return (\n    <div className=\"App\">\n<ScoreBoard score={score}/>\n       <div className=\"game\">\n       {allColors.map((color,index)=>(\n       <img\n      \n         key={index}\n         alt={color}\n         src={color}\n         data-id={index}\n         draggable={true}\n         onDragStart={dragStart}\n         onDragOver={(e)=>e.preventDefault()}\n         onDragEnter={(e)=>e.preventDefault()}\n         onDragLeave={(e)=>e.preventDefault()}\n         onDrop={dragDrop}\n         onDragEnd={dragEnd}\n         \n        \n         />\n       ))}\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}